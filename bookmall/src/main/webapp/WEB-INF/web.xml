<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
<!-- 
	该配置文件有以下几个作用：
	1.配置springmvc
	2.配置spring 配置文件
	3.配置字符编码过滤器
	4.配置页面缓存过滤器
 -->

	<!-- 解析指定位置上的spring配置文件：主要配置javabean 。
	若不配置，则会默认会解析 /WEB-INF/applicationContext.xml
	若修改名字，则 spring 将无法识别到配置文件（如下则会读取根目录下的applicationContext.xml配置文件而不是/web-inf下的位置）-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/applicationContext.xml</param-value>
	</context-param>

	<!-- 配置页面缓存过滤器：所有路径经过/cache/* 的都将被进行页面缓存 -->
	<filter>
		<filter-name>CacheFilter</filter-name>
		<filter-class>com.opensymphony.oscache.web.filter.CacheFilter</filter-class>
		<init-param>
			<param-name>time</param-name>
			<param-value>60</param-value>
		</init-param>
		<init-param>
			<param-name>scope</param-name>
			<param-value>application</param-value>
		</init-param>
	</filter>

	<!--  配置字符编码过滤器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>CacheFilter</filter-name>
		<url-pattern>/cache/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 启动Web容器时，自动装配ApplicationContext的配置信息。linstener含有监听的意思。 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 解析spring mvc的配置文件,主要配置Controller，面向商家 -->
	<servlet>
		<servlet-name>seller</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc_back.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- 解析spring mvc的配置文件,主要配置Controller，面向买家 -->
	<servlet>
		<servlet-name>buyer</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc_front.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>


	<servlet-mapping>
		<servlet-name>seller</servlet-name>
		<url-pattern>*.back</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>buyer</servlet-name>
		<url-pattern>*.front</url-pattern>
	</servlet-mapping>
</web-app>
